from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ContentType, ReplyKeyboardRemove
from database.db_operations import create_task, get_client_tasks, cancel_task
from utils.keyboards import client_main_menu, priority_keyboard, cancel_keyboard
from utils.validators import validate_phone
from config.config import config, TaskStatus
import logging

logger = logging.getLogger(__name__)

class ClientStates(StatesGroup):
    waiting_for_title = State()
    waiting_for_description = State()
    waiting_for_phone = State()
    waiting_for_priority = State()
    waiting_for_image = State()
    waiting_for_company = State()

async def start_client(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ Certus Telecom!\n"
        "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=client_main_menu()
    )

async def show_my_tasks(message: types.Message):
    tasks = await get_client_tasks(message.from_user.id)
    if not tasks:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")
        return
    
    for task in tasks:
        status = {
            TaskStatus.NEW: "üÜï –ù–æ–≤–∞—è",
            TaskStatus.IN_PROGRESS: "üõ† –í —Ä–∞–±–æ—Ç–µ",
            TaskStatus.COMPLETED: "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞",
            TaskStatus.CANCELLED: "‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞"
        }[task.status]
        
        text = (
            f"üîπ –ó–∞—è–≤–∫–∞ #{task.id}\n"
            f"üìå {task.title}\n"
            f"üìù {task.description}\n"
            f"üìû {task.client_phone}\n"
            f"üè¢ {task.company}\n"
            f"üî¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {task.priority}/5\n"
            f"üîÑ {status}"
        )
        await message.answer(text, reply_markup=cancel_keyboard(task.id))

# ... (–ø–æ–ª–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM) ...

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(start_client, commands=['start'])
    dp.register_message_handler(show_my_tasks, text="–ú–æ–∏ –∑–∞—è–≤–∫–∏")
    # ... (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤) ...
